#!/usr/bin/env ruby

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gonano/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

# make sure the env dir exists
directory "/data/etc/env.d" do
  recursive true
end

# and that it's owned by gonano
execute "chown gonano /data/etc/env.d"

(payload[:env] || {}).each do |key, value|
  file "/data/etc/env.d/#{key}" do
    content value
    owner 'gonano'
    group 'gonano'
    mode 0444
  end
end

if payload[:logvac_host]
  # configure narc
  template '/opt/gonano/etc/narc.conf' do
    variables ({
      uid: payload[:component][:uid],
      logvac: payload[:logvac_host],
      svc: "parity",
    })
  end

  # ensure log files are created
  ["/var/log/gonano/parity/current"].each do |log_file|
    if not ::File.exists? "#{log_file}"
      parent = File.expand_path("..", "#{log_file}")
      
      # create the parent directory
      directory parent do
        owner 'gonano'
        group 'gonano'
        recursive true
      end
      
      # create the log_file
      file "#{log_file}" do
        owner 'gonano'
        group 'gonano'
        mode  0644
      end
    end
  end

  directory '/etc/service/narc'

  template '/etc/service/narc/run' do
    mode 0755
    source 'run-root.erb'
    variables ({ exec: "/opt/gonano/bin/narcd /opt/gonano/etc/narc.conf" })
  end
end

# Install extra packages

# Add extra paths
if payload[:extra_path_dirs] && payload[:extra_path_dirs].length > 0
  directory "/data/etc/env.d" do
    recursive true
    owner 'gonano'
    group 'gonano'
  end

  file "/data/etc/env.d/EXTRA_PATHS" do
    content payload[:extra_path_dirs].join(":")
    owner 'gonano'
    group 'gonano'
    mode 0444
  end
end

if payload[:extra_packages]
  execute "Install packages" do
    command "/data/bin/pkgin -y in #{payload[:extra_packages].join(' ')}"
    path "/data/sbin:/data/bin:/opt/gonano/sbin:/opt/gonano/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    user 'gonano'
  end
end

if payload[:extra_steps]
  payload[:extra_steps].each_with_index do |cmd, i|

    execute "Extra Step: #{cmd}" do
      command "bash -i -l -c \"#{escape cmd}\""
      cwd "/data"
      path "/data/sbin:/data/bin:/opt/gonano/sbin:/opt/gonano/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      user 'gonano'
    end
  end
end

# make sure the database dir exists
directory '/data/var/db/parity' do
  recursive true
end

# and that it's owned by gonano
execute 'chown /data/var/db/parity' do
  command 'chown -R gonano:gonano /data/var/db/parity'
end
